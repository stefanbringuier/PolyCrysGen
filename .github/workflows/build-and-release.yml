name: Build and Release AppImage

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install FUSE
      if: runner.os == 'Linux'
      run: sudo apt update && sudo apt install fuse -y

    - name: Download appimagetool
      run: |
        mkdir -p tools
        cd tools
        wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        ls -l
        cd ~

    - name: Add appimagetool to PATH
      run: |
        echo "$PWD/tools" >> $GITHUB_PATH
        echo "$GITHUB_PATH"  # Print the updated PATH variable for debugging purposes

    - name: Create directories usr/bin and usr/lib
      run: |
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/lib

    - name: Download and unpack atomsk binary
      run: |
        wget -q https://atomsk.univ-lille.fr/code/atomsk_b0.13.1_Linux-amd64.tar.gz
        tar -xzf atomsk_b0.13.1_Linux-amd64.tar.gz
        mv ./atomsk_b0.13.1_Linux-amd64/atomsk AppDir/usr/bin/

    - name: Copy PolyCrysGen.sh script
      run: cp PolyCrysGen.sh AppDir/usr/bin/

    - name: Set up Python and ASE
      run: |
        python3 -m venv AppDir/usr/lib/python-venv
        source AppDir/usr/lib/python-venv/bin/activate
        pip install --upgrade pip
        pip install --upgrade git+https://gitlab.com/ase/ase.git@master
        deactivate

    - name: Build AppImage
      run: |
        ./tools/appimagetool-x86_64.AppImage AppDir -n PolyCrysGen.AppImage 

    - name: Determine Next Version
      id: versioning
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: minor
        WITH_V: "true"
        RELEASE_BRANCHES: main


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.versioning.outputs.new_tag }}
        release_name: Release ${{ steps.versioning.outputs.new_tag }}
        draft: false
        prerelease: false
    
    - name: Upload AppImage as release artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This is the step ID of the Create Release step
        asset_path: ./PolyCrysGen.AppImage
        asset_name: PolyCrysGen.AppImage
        asset_content_type: application/octet-stream
